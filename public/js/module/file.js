define('file', ['util', 'query'], function ( Util, Query ){	var util = new Util(),		q = new Query();	var File = function (){};	File.prototype = {		constructor : File,		getFileList : function ( path, callback ){			var self = this;			var preBtn = $(".file-pre");			var p = util.formatURL( (Array.isArray(path) ? path[0] : path) );			q.getFileList( p, function ( err, data ){				util.renderTemplate({ data : { "files" : data } }) && self.reBind();				var prePath = p.replace(/((\w|\-|\.)+\/)$/gi,"");				preBtn.attr({"data-path":prePath});				$(".currentReallyPath").val().length > 3 ? preBtn.show() : preBtn.hide();				return callback && callback();			});		},		reBind : function ( obj ){			var self = this;			return $(".drives .drivesItem,.filesLists li").off("click").on("click", function (){				var $dataPath = $(this).attr("data-path");				if( !$dataPath ) return;				var _data = $dataPath.indexOf("file!") > -1 ? $dataPath.replace("file!", "") : $dataPath;				self.getFileList( _data );			});		}	};	return File;});